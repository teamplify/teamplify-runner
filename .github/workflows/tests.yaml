name: Tests
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    
env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    
jobs:
  notify-build-start:
    # Secrets are not available for forks for security reasons, so pull
    # request checks will fail when trying to send the Slack notification.
    # Unfortunately, there's no way to explicitly check that a secret is
    # available, so we check for event_name instead:
    # https://github.com/actions/runner/issues/520
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: ivelum/github-action-slack-notify-build@v1.7.2
        id: slack
        with:
          channel_id: C0PT3267R
          status: STARTED
          color: '#ee9b00'
    outputs:
      status_message_id: ${{ steps.slack.outputs.message_id }}

  lint-and-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: update pip
        run: |
          pip install -U wheel
          pip install -U setuptools
          python -m pip install -U pip
      - name: get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip|${{ matrix.python }}
      - run: pip install -r requirements-tests.txt
      - run: pip install -e .
      - run: flake8 --isort-show-traceback && pytest

  setup-test:
    name: Set up an on-premise instance
    runs-on: self-hosted
    env:
      NPM_CONFIG_PREFIX: "~/.npm-global"
    steps:
      - uses: actions/checkout@v3
        
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Install Teamplify
        run: pip3 install --editable .

      - name: Configure
        run: teamplify configure

      - name: Create backup directory
        run: mkdir ${{ runner.temp }}/backup

      - name: Set backup_mount
        run: sed -i -e '/backup_mount =/ s~= .*~= ${{ runner.temp }}/backup~' ~/.teamplify.ini

      - name: Set product key
        run: sed -i -e '/product_key =/ s/= .*/= ${{ secrets.ONPREMISE_PRODUCT_KEY }}/' ~/.teamplify.ini

      - name: Set host to localhost
        run: sed -i -e '/host =/ s/= .*/= localhost/' ~/.teamplify.ini

      - name: Install Selenium and latest chromedriver 
        run: npm install -g selenium-side-runner chromedriver@112

      - name: Install stable Chrome
        id: install-chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Wait for Teamplify to start
        run: teamplify start --wait

      - name: Run selenium test
        run: >
          selenium-side-runner 
          -c "
            browserName=chrome
            goog:chromeOptions.args=[--headless, --nogpu, --disable-dev-shm-usage]
            goog:chromeOptions.binary=${{ steps.install-chrome.outputs.chrome-path }}
          "
          ./tests/on-premises-start-selenium.side

  notify-build-failure:
    if: ${{ failure() && github.event_name == 'push' }}
    needs: [lint-and-tests, setup-test, notify-build-start]
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack fail
        uses: ivelum/github-action-slack-notify-build@v1.7.2
        with:
          message_id: ${{ needs.notify-build-start.outputs.status_message_id }}
          channel_id: C0PT3267R
          status: FAILED
          color: '#d7263d'

  notify-build-success:
    if: ${{ github.event_name == 'push' }}
    needs: [lint-and-tests, setup-test, notify-build-start]
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack success
        uses: ivelum/github-action-slack-notify-build@v1.7.2
        with:
          message_id: ${{ needs.notify-build-start.outputs.status_message_id }}
          channel_id: C0PT3267R
          status: SUCCESS
          color: '#16db65'
