# We use v2 because we need volumes_from which was removed in v3.
# See https://github.com/docker/compose/issues/4379
version: '2'

services:

  builtin_db:
    image: ${IMAGE_DB}
    container_name: teamplify_db
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql/
      - ${DB_BACKUP_MOUNT}:/backup/
      - ./mysql.cnf:/etc/mysql/conf.d/teamplify.cnf:ro
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password

  redis:
    image: ${IMAGE_REDIS}
    container_name: teamplify_redis
    restart: always

  nginx:
    image: ${IMAGE_NGINX}
    container_name: teamplify_nginx
    depends_on:
      - app
    volumes:
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_dhparam:/etc/nginx/dhparam
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.conf:/etc/nginx/vhost.d/${WEB_HOST}:ro
      - ./uwsgi_params.conf:/etc/nginx/uwsgi_params:ro
    volumes_from:
      - app:ro
    ports:
      - ${WEB_PORT}:80
      - 443:443
    restart: always
    entrypoint: bash -c "find /etc/nginx/dhparam/dhparam.pem -empty -delete || true && /app/docker-entrypoint.sh forego start -r"

  letsencrypt:
    image: ${IMAGE_LETSENCRYPT}
    container_name: teamplify_letsencrypt
    depends_on:
      - nginx
    volumes:
      - nginx_certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx

  builtin_smtp:
    image: ${IMAGE_SMTP}
    container_name: teamplify_smtp
    volumes:
      - ./postfix.cf:/etc/postfix/main.cf.d/10-custom.cf:ro
    restart: always

  app:
    image: ${IMAGE_APP}
    container_name: teamplify_app
    depends_on:
      - builtin_db
      - redis
    links:
      - builtin_db
      - redis
    volumes:
      - media:/media/
      - repos:/repos/
    environment:
      # nginx-proxy & Let's Encrypt configuration:
      - VIRTUAL_HOST=${WEB_HOST}
      - VIRTUAL_PORT=8211
      - VIRTUAL_PROTO=uwsgi
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - HSTS=off

      - MAIN_PRODUCT_KEY
      - MAIN_SEND_CRASH_REPORTS
      - WEB_HOST
      - WEB_PORT
      - WEB_USE_SSL
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASSWORD
      - EMAIL_ADDRESS_FROM
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PROTOCOL
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - CRYPTO_SIGNING_KEY
    command: /code/server/app.sh
    restart: always

  worker_slim:
    image: ${IMAGE_APP}
    container_name: teamplify_worker_slim
    depends_on:
      - app
      - builtin_smtp
    links:
      - builtin_db
      - redis
      - builtin_smtp
    volumes:
      - media:/media/
      - repos:/repos/
    environment:
      - C_FORCE_ROOT=1
      - MAIN_PRODUCT_KEY
      - MAIN_SEND_CRASH_REPORTS
      - WEB_HOST
      - WEB_PORT
      - WEB_USE_SSL
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASSWORD
      - EMAIL_ADDRESS_FROM
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PROTOCOL
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - CRYPTO_SIGNING_KEY
    command: /code/server/worker-slim.sh
    restart: always

  worker_fat:
    image: ${IMAGE_APP}
    container_name: teamplify_worker_fat
    depends_on:
      - app
      - builtin_smtp
    links:
      - builtin_db
      - redis
      - builtin_smtp
    volumes:
      - media:/media/
      - repos:/repos/
    environment:
      - C_FORCE_ROOT=1
      - MAIN_PRODUCT_KEY
      - MAIN_SEND_CRASH_REPORTS
      - WEB_HOST
      - WEB_PORT
      - WEB_USE_SSL
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASSWORD
      - EMAIL_ADDRESS_FROM
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PROTOCOL
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - CRYPTO_SIGNING_KEY
    command: /code/server/worker-fat.sh
    restart: always

  beat:
    image: ${IMAGE_APP}
    container_name: teamplify_beat
    depends_on:
      - app
    links:
      - builtin_db
      - redis
    volumes:
      - media:/media/
      - repos:/repos/
    environment:
      - MAIN_PRODUCT_KEY
      - MAIN_SEND_CRASH_REPORTS
      - WEB_HOST
      - WEB_PORT
      - WEB_USE_SSL
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASSWORD
      - EMAIL_ADDRESS_FROM
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PROTOCOL
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - CRYPTO_SIGNING_KEY
    command: /code/server/beat.sh
    restart: always

volumes:
  nginx_certs:
  nginx_dhparam:
  media:
  mysql_data:
  repos:
